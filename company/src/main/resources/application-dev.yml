spring:
  application:
    name: company
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:postgresql://${COMPANY_SERVER_DB_CONTAINER_NAME}:${COMPANY_SERVER_DB_PORT}/${COMPANY_SERVER_DB_NAME}
    username: ${COMPANY_SERVER_DB_USERNAME}
    password: ${COMPANY_SERVER_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

server:
  port: ${COMPANY_SERVER_PORT}

springdoc:
  api-docs:
    path: /companies/v3/api-docs
  swagger-ui:
    path: /companies/swagger-ui.html

eureka:
  instance:
    hostname: ${COMPANY_SERVER_CONTAINER_NAME}
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER_CONTAINER_NAME}:${EUREKA_SERVER_PORT}/eureka/
    register-with-eureka: true  # Eureka 서버에 등록
    fetch-registry: true  # Eureka 서버로부터 레지스트리 정보 가져오기