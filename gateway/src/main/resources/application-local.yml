spring:
  main:
    web-application-type: reactive  # Spring 애플리케이션이 리액티브 웹 애플리케이션으로 설정됨
  application:
    name: gateway
  config:
    activate:
      on-profile: local
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # 서비스 디스커버리를 통해 동적으로 라우트를 생성하도록 설정
      routes:
        - id: user
          uri: lb://user
          predicates:
            - Path=/api/users/**, /api/auth/**, /users/v3/api-docs

        - id: company
          uri: lb://company
          predicates:
            - Path=/api/companies/**, /api/products/**, /companies/v3/api-docs

        - id: hub
          uri: lb://hub
          predicates:
            - Path=/api/hubs/**, /api/hub-routes/**, /api/delivery-managers/**, /hubs/v3/api-docs

        - id: order
          uri: lb://order
          predicates:
            - Path=/api/deliveries/**, /api/orders/**, /api/delivery-histories/**, /orders/v3/api-docs

server:
  port: ${GATEWAY_SERVER_PORT}

springdoc:
  swagger-ui:
    use-root-path: true # 게이트웨이 들어오면 자동으로 swagger로 가짐
    urls:
      - url: http://${GATEWAY_SERVER_HOST}:${GATEWAY_SERVER_PORT}/users/v3/api-docs
        name: User
      - url: http://${GATEWAY_SERVER_HOST}:${GATEWAY_SERVER_PORT}/companies/v3/api-docs
        name: Company
      - url: http://${GATEWAY_SERVER_HOST}:${GATEWAY_SERVER_PORT}/hubs/v3/api-docs
        name: Hub
      - url: http://${GATEWAY_SERVER_HOST}:${GATEWAY_SERVER_PORT}/orders/v3/api-docs
        name: Order

eureka:
  instance:
    hostname: ${GATEWAY_SERVER_HOST}
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER_HOST}:${EUREKA_SERVER_PORT}/eureka/
    register-with-eureka: true
    fetch-registry: true

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health, info, metrics
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v2/spans
  tracing:
    sampling:
      probability: 0.1

jwt:
  secret-key: ${JWT_SECRET_KEY}